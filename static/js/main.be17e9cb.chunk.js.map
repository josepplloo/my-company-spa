{"version":3,"sources":["components/Layout/styles.module.scss","components/Layout/constants.js","components/Layout/index.jsx","components/Home.jsx","components/Clients.jsx","components/Contact.jsx","components/Products/constants.js","components/Products/components/Product/utils.js","components/Products/components/Product/index.jsx","components/Products/index.jsx","App.jsx","serviceWorker.js","index.jsx","components/Products/components/Product/styles.module.scss"],"names":["module","exports","PATHS","TAB_INDEX","Layout","children","tabs","className","styles","link","to","useState","tabIndex","setTabIndex","pathname","useLocation","useEffect","newPathName","split","tabsId","activeIndex","onActiveIndexChange","padded","Home","TextContainer","textContainer","Text","type","Clients","Contact","LINKS","name","path","icon","iconWrapper","FormatListBulletedSVGIcon","ComputerSVGIcon","BuildSVGIcon","FolderSVGIcon","formatCategories","url","URL_INDEX","newURl","getLength","arr","length","Product","categoryId","useParams","loading","data","dataFiltered","showing","hidden","appState","setAppState","state","fetch","then","res","json","products","filteredProducts","category","filter","categories","find","elementCategory","filterByCategory","productCounter","map","id","description","photo","price","stock","Card","key","cardContainer","CardHeader","cardHeader","CardTitle","productCategories","join","CardContent","cardContent","columns","imageContainer","colSpan","image","src","alt","productInfoContainer","productDescription","productInfo","Products","useRouteMatch","tabletColumns","phoneColumns","List","index","ListItem","leftAddon","Divider","exact","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.be17e9cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"styles_link__OWjQp\",\"tabs\":\"styles_tabs__3i35_\",\"textContainer\":\"styles_textContainer__3S7Ru\"};","export const PATHS = {\n  HOME: '/',\n  PRODUCTS: '/products',\n  CLIENTS: '/clients',\n  CONTACT: '/contact'\n};\n\nexport const TAB_INDEX = {\n  '/': 0,\n  '/products': 1,\n  '/clients': 2,\n  '/contact': 3\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Configuration, TabsManager, Tabs } from 'react-md';\n\nimport { PATHS, TAB_INDEX } from './constants';\nimport styles from './styles.module.scss';\n\nfunction Layout({ children }) {\n  const tabs = [\n    {\n      children: <Link className={styles.link} to={PATHS.HOME}>HOME</Link>\n    },\n    {\n      children: <Link className={styles.link} to={PATHS.PRODUCTS}>PRODUCTS</Link>\n    },\n    {\n      children: <Link className={styles.link} to={PATHS.CLIENTS}>CLIENTS</Link>\n    },\n    {\n      children: <Link className={styles.link} to={PATHS.CONTACT}>CONTACT</Link>\n    }\n  ];\n\n  const [tabIndex, setTabIndex] = useState(0);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    const newPathName = `/${pathname.split('/')[1]}`\n    setTabIndex(TAB_INDEX[newPathName]);\n  }, [pathname])\n\n  return (\n    <Configuration >\n      <TabsManager tabs={tabs} tabsId=\"basic-usage-tabs\" activeIndex={tabIndex} onActiveIndexChange={setTabIndex}>\n        <Tabs padded={true} className={styles.tabs} />\n        {children}\n      </TabsManager>\n    </Configuration>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport { TextContainer, Text } from 'react-md';\n\nimport styles from './Layout/styles.module.scss';\n\nexport default function Home() {\n  return (\n    <TextContainer className={styles.textContainer}>\n      <Text type=\"headline-4\">Home</Text>\n    </TextContainer>\n  );\n}\n","import React from 'react';\nimport { TextContainer, Text } from 'react-md';\n\nimport styles from './Layout/styles.module.scss';\n\nexport default function Clients() {\n  return (\n    <TextContainer className={styles.textContainer}>\n      <Text type=\"headline-4\">Clients</Text>\n    </TextContainer>\n  );\n}\n","import React from 'react';\nimport { TextContainer, Text } from 'react-md';\n\nimport styles from './Layout/styles.module.scss';\n\nexport default function Contact() {\n  return (\n    <TextContainer className={styles.textContainer}>\n      <Text type=\"headline-4\">Contact</Text>\n    </TextContainer>\n  );\n}\n","import React from 'react';\nimport { ComputerSVGIcon, FormatListBulletedSVGIcon, BuildSVGIcon, FolderSVGIcon } from 'react-md';\n\nimport styles from './components/Product/styles.module.scss';\n\nexport const LINKS = [\n  {\n    name: 'All',\n    path: '',\n    icon: <div className={styles.iconWrapper}><FormatListBulletedSVGIcon /></div>\n  },\n  {\n    name: 'Tech',\n    path: '/tech',\n    icon: <div className={styles.iconWrapper}><ComputerSVGIcon /></div>\n  },\n  {\n    name: 'Services',\n    path: '/services',\n    icon: <div className={styles.iconWrapper}><BuildSVGIcon /></div>\n  },\n  {\n    name: 'Office',\n    path: '/office',\n    icon: <div className={styles.iconWrapper}><FolderSVGIcon /></div>\n  },\n];\n\nexport const API_URL = 'https://my-json-server.typicode.com/josepplloo/my-company-spa/db';\n","export const filterByCategory = ({ category = 'All', data = [] }) => {\n  return data.filter(({ categories }) => {\n    return categories.find(elementCategory => elementCategory === category)\n  })\n}\n\nexport const formatCategories = (url = '/') => {\n  const URL_INDEX = {\n    '/': 'All',\n    '/tech': 'Tech',\n    '/services': 'Services',\n    '/office': 'Office'\n  };\n  const newURl = `/${url.split('/')[0]}`;\n  return URL_INDEX[newURl];\n};\n\nexport const getLength = (arr = []) => arr.length\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Card, CardContent, CardTitle, CardHeader, } from \"@react-md/card\";\nimport { Text, TextContainer, Grid, GridCell } from 'react-md';\n\nimport { API_URL } from '../../constants';\nimport { filterByCategory, formatCategories, getLength } from './utils';\nimport styles from './styles.module.scss';\n\nfunction Product() {\n  const { categoryId } = useParams();\n  const [appState, setAppState] = useState({\n    loading: false,\n    data: [],\n    dataFiltered: [],\n    showing: 0,\n    hidden: 0\n  });\n\n  useEffect(() => {\n    setAppState(state => ({ ...state, ...{ loading: true } }));\n    fetch(API_URL).then((res) => res.json()).then(({ products }) => {\n      setAppState(state => ({\n        ...state,\n        ...{\n          loading: false,\n          data: [...products],\n          dataFiltered: [...products],\n          showing: getLength(products),\n        }\n      }));\n    });\n  }, [setAppState]);\n\n  useEffect(() => {\n    const filteredProducts = filterByCategory({ data: appState.data, category: formatCategories(categoryId) });\n    setAppState(state => ({\n      ...state,\n      ...{\n        dataFiltered: [...filteredProducts],\n        showing: getLength(filteredProducts),\n        hidden: getLength(appState.data) - getLength(filteredProducts)\n      }\n    }));\n  }, [categoryId, setAppState, appState.data])\n\n  return (\n    (appState.loading) ? <Text>Loading...</Text> :\n      <>\n        <Text className={styles.productCounter} type=\"body-2\">\n          Showing <span>{appState.showing}</span> products - Hidden: <span>{appState.hidden}</span>\n        </Text>\n        {\n          appState.dataFiltered.map(({\n            id,\n            name,\n            description,\n            categories,\n            photo,\n            price,\n            stock\n          }) =>\n            <Card key={id} className={styles.cardContainer}>\n              <CardHeader className={styles.cardHeader}>\n                <CardTitle>{name}</CardTitle>\n                <Text className={styles.productCategories} type=\"body-2\">{categories.join(', ')}</Text>\n              </CardHeader>\n              <CardContent className={styles.cardContent}>\n                <Grid columns={3}>\n                  <GridCell className={styles.imageContainer} colSpan={1}>\n                    <img className={styles.image} src={photo} alt=\"product\" />\n                  </GridCell>\n                  <GridCell className={styles.productInfoContainer} colSpan={2}>\n                    <TextContainer>\n                      <Text className={styles.productDescription} type=\"body-2\">\n                        {description}\n                      </Text>\n                      <Text className={styles.productInfo} type=\"body-2\"><span>Stock:</span>{stock}</Text>\n                      <Text className={styles.productInfo} type=\"body-2\"><span>Price:</span>{price}</Text>\n                    </TextContainer>\n                  </GridCell>\n                </Grid>\n              </CardContent>\n              {/* this div avoids extra padding added by react-md https://react-md.dev/packages/card/sassdoc#card-variable-rmd-card-content-padding-extra */}\n              <div></div>\n            </Card>\n          )\n        }\n      </>\n  );\n}\nexport default Product;\n","import React from 'react';\nimport { Text, List, ListItem, Divider, Grid, GridCell } from 'react-md';\nimport {\n  Switch,\n  Route,\n  Link,\n  useRouteMatch\n} from \"react-router-dom\";\n\nimport Product from './components/Product'\nimport { LINKS } from './constants';\nimport styles from './components/Product/styles.module.scss';\n\nexport default function Products() {\n  const { path, url } = useRouteMatch();\n  return (\n    <Grid columns={3} tabletColumns={1} phoneColumns={1}>\n      <GridCell colSpan={1}>\n        <List>\n          <Text type=\"subtitle-1\" className={styles.productCategories}>Categories</Text>\n          {\n            LINKS.map(({ name, path, icon }, index) =>\n              <div key={name}>\n                <Link to={`${url}${path}`}>\n                  <ListItem id={`L-${path}`} leftAddon={icon}>{name}</ListItem>\n                </Link>\n                {index === 0 && <Divider />}\n              </div>)\n          }\n        </List>\n      </GridCell>\n      <GridCell colSpan={2}>\n        <Switch>\n          <Route exact path={path}>\n            <Product />\n          </Route>\n          <Route path={`${path}/:categoryId`}>\n            <Product />\n          </Route>\n        </Switch>\n      </GridCell>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from 'components/Layout';\nimport Home from 'components/Home';\nimport Clients from 'components/Clients';\nimport Contact from 'components/Contact';\nimport Products from 'components/Products';\n\nexport default function App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/products\" component={Products} />\n        <Route path=\"/clients\" component={Clients} />\n        <Route path=\"/contact\" component={Contact} />\n      </Switch>\n    </Layout>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"styles_image__1fX7n\",\"imageContainer\":\"styles_imageContainer__2RFlY\",\"cardContainer\":\"styles_cardContainer__1GfDV\",\"cardHeader\":\"styles_cardHeader__20zXv\",\"cardContent\":\"styles_cardContent__2l0qe\",\"productCounter\":\"styles_productCounter__3Yj4j\",\"productCategories\":\"styles_productCategories__1MGID\",\"productInfo\":\"styles_productInfo__UttOb\",\"productInfoContainer\":\"styles_productInfoContainer__2lVNY\",\"productDescription\":\"styles_productDescription__UldO7\",\"iconWrapper\":\"styles_iconWrapper__1Uddi\"};"],"sourceRoot":""}